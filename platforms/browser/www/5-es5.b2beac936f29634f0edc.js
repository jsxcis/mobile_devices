(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"2g2N":function(e,t,o){"use strict";o.d(t,"a",(function(){return i}));var s=o("mrSG"),n=o("8Y7J"),r=o("sZkV");let i=(()=>{class e{constructor(e){this.toastController=e}presentToast(e){return s.a(this,void 0,void 0,(function*(){(yield this.toastController.create({message:e,duration:2e3})).present()}))}}return e.ngInjectableDef=n.Jb({factory:function(){return new e(n.Kb(r.Gb))},token:e,providedIn:"root"}),e})()},hKcI:function(e,t,o){"use strict";o.d(t,"a",(function(){return i}));var s=o("N+K7"),n=o("8Y7J"),r=o("iInd");let i=(()=>{class e{constructor(e,t){this.httpService=e,this.router=t}retrieveWeatherStns(e){return console.log("retrieveWeatherStnds:"+e.req),this.httpService.post("xcisweatherstnrest",e)}retrieveFences(e){return console.log("retrieveFences:"+e.req),this.httpService.post("xcisfencerest",e)}retrieveTroughs(e){return console.log("retrieveTroughs:"+e.req),this.httpService.post("xcistroughrest",e)}retrieveTanks(e){return console.log("retrieveTanks:"+e.req),this.httpService.post("xcistankrest",e)}retrieveBores(e){return console.log("retrieveBores:"+e.req),this.httpService.post("xcisborerest",e)}startBore(e){return console.log("startBore:"+e.req),this.httpService.post("xcisboreonrest",e)}stopBore(e){return console.log("startBore:"+e.req),this.httpService.post("xcisboreoffrest",e)}retrieveDevice(e){return console.log("retrieveDevice:"+e.req),this.httpService.post("xcisdevicerest",e)}}return e.ngInjectableDef=n.Jb({factory:function(){return new e(n.Kb(s.a),n.Kb(r.m))},token:e,providedIn:"root"}),e})()},j1ZV:function(e,t,o){"use strict";o.d(t,"a",(function(){return s}));class s{}},lz9Z:function(e,t,o){"use strict";o.r(t);var s=o("8Y7J");class n{}var r=o("pMnS"),i=o("MKJQ"),a=o("sZkV"),l=o("gcOT"),c=o("hKcI"),h=o("2g2N");const{Network:p}=l.a;class u{constructor(e,t,o,s,n){this.xcisService=e,this.toastService=t,this.renderer=o,this.element=s,this._document=n,this.markers=[],this.mapsLoaded=!1,this.networkHandler=null,this.postData={userID:"jsharp",req:"all"},this.postDeviceData={deviceID:"NOTSET",req:"one"},this.labelColor="white"}ngOnInit(){this.init().then(e=>{console.log("Google Maps ready.")},e=>{console.log(e)})}ionViewWillEnter(){console.log("ionViewWillEnter")}init(){return new Promise((e,t)=>{this.loadSDK().then(o=>{this.initMap().then(t=>{e(!0)},e=>{t(e)})},e=>{t(e)})})}loadSDK(){return console.log("Loading Google Maps SDK"),new Promise((e,t)=>{this.mapsLoaded?t("SDK already loaded"):p.getStatus().then(o=>{o.connected?this.injectSDK().then(t=>{e(!0)},e=>{t(e)}):(null==this.networkHandler&&(this.networkHandler=p.addListener("networkStatusChange",e=>{e.connected&&(this.networkHandler.remove(),this.init().then(e=>{console.log("Google Maps ready.")},e=>{console.log(e)}))})),t("Not online"))},o=>{navigator.onLine?this.injectSDK().then(t=>{e(!0)},e=>{t(e)}):t("Not online")})})}injectSDK(){return new Promise((e,t)=>{window.mapInit=()=>{this.mapsLoaded=!0,e(!0)};let o=this.renderer.createElement("script");o.id="googleMaps",o.src=this.apiKey?"https://maps.googleapis.com/maps/api/js?key="+this.apiKey+"&callback=mapInit":"https://maps.googleapis.com/maps/api/js?callback=mapInit",this.renderer.appendChild(this._document.body,o)})}initMap(){return new Promise((e,t)=>{console.log("map init");let o={center:new google.maps.LatLng(-33.80587,148.777148),zoom:15,mapTypeId:google.maps.MapTypeId.HYBRID};this.map=new google.maps.Map(document.getElementById("map_canvas"),o),this.map.addListener("maptypeid_changed",(function(){console.log("Map type changed")})),this.loadFenceMarkers(),this.loadTroughMarkers(),this.loadTankMarkers(),this.loadBoreMarkers(),this.loadWeatherMarkers(),e(!0)})}addMarker(e,t,o,s,n){let r=new google.maps.LatLng(t,o);var i=new google.maps.InfoWindow({content:e}),a={url:n,size:new google.maps.Size(60,60),origin:new google.maps.Point(0,0),anchor:new google.maps.Point(0,20)};let l=new google.maps.Marker({title:s,label:{text:s,color:this.labelColor},map:this.map,animation:google.maps.Animation.DROP,position:r,icon:a,shape:{coords:[1,1,1,20,18,20,18,1],type:"poly"},draggable:!0});l.addListener("click",(function(){i.open(this.map,l),console.log("opened marker:")})),this.markers.push(l)}loadDevice(e){console.log("Loading Device...."),this.postDeviceData.deviceID=e,console.log(this.postDeviceData.deviceID),this.xcisService.retrieveDevice(this.postDeviceData).subscribe(e=>{for(var t in this.device=e.deviceData,this.device)console.log(this.device[t].deviceName),console.log(this.device[t].deviceMode),console.log(this.device[t].deviceLAT),console.log(this.device[t].deviceLONG)},e=>{console.log("Network connection error retrieving weatherStns"),console.log(e),this.toastService.presentToast("Network connection error retrieving weatherStns")})}loadWeatherMarkers(){console.log("Loading Weather Markers...."),this.xcisService.retrieveWeatherStns(this.postData).subscribe(e=>{for(var t in this.weatherStns=e.weatherStnData,this.weatherStns){console.log(this.weatherStns[t].deviceName),console.log(this.weatherStns[t].deviceMode),console.log(this.weatherStns[t].deviceLAT),console.log(this.weatherStns[t].deviceLONG);var o=this.weatherStns[t].deviceName;this.addMarker('<div id ="content"><p><b>'+o+"</b></p><p>Temp: "+this.weatherStns[t].temperature+"&#x2103;</p><p>Humidity: "+this.weatherStns[t].humidity+"%</p><p>Pressure: "+this.weatherStns[t].pressure+"mb</p><p>Wind Speed: "+this.weatherStns[t].windSpeed+"kts</p><p>Wind Direction: "+this.weatherStns[t].direction+"</p><p>Rain Total: "+this.weatherStns[t].rainTotalMM+"mm</p><p>Rain/Hour: "+this.weatherStns[t].rainMMPerHour+"mm</p><p>Status Date: "+this.weatherStns[t].deviceStatusDate+"</p></div>",this.weatherStns[t].deviceLAT,this.weatherStns[t].deviceLONG,o+" Weather Stn","assets/icon/weatherstnicon_marker.png")}},e=>{console.log("Network connection error retrieving weatherStns"),console.log(e),this.toastService.presentToast("Network connection error retrieving weatherStns")})}loadBoreMarkers(){console.log("Loading Bore Markers...."),this.xcisService.retrieveBores(this.postData).subscribe(e=>{for(var t in this.bores=e.boreData,this.bores){console.log(this.bores[t].deviceName),console.log(this.bores[t].deviceMode),console.log(this.bores[t].deviceLAT),console.log(this.bores[t].deviceLONG);var o=this.bores[t].deviceName;this.addMarker('<div id ="content"><p><b>'+o+"</b></p><p>Mode: "+this.bores[t].deviceMode+"</p><p>Status: "+this.bores[t].boreStatus+"</p><p>State: "+this.bores[t].boreState+"</p><p>Current: "+this.bores[t].boreCurrent+"A</p><p>Flow Rate: "+this.bores[t].boreFlowRate+"L/min</p><p>Status Date: "+this.bores[t].deviceStatusDate+"</p></div>",this.bores[t].deviceLAT,this.bores[t].deviceLONG,o+" Bore","assets/icon/boreicon_marker.png")}},e=>{console.log("Network connection error retrieving bores"),console.log(e),this.toastService.presentToast("Network connection error retrieving bores")})}loadTankMarkers(){console.log("Loading Tank Markers...."),this.xcisService.retrieveTanks(this.postData).subscribe(e=>{for(var t in this.tanks=e.tankData,this.tanks){console.log(this.tanks[t].deviceName),console.log(this.tanks[t].deviceMode),console.log(this.tanks[t].deviceLAT),console.log(this.tanks[t].deviceLONG);var o=this.tanks[t].deviceName;this.addMarker('<div id ="content"><p><b>'+o+"</b></p><p>Mode: "+this.tanks[t].deviceMode+"</p><p>Level: "+this.tanks[t].deviceLevel+"%</p><p>Available Depth: "+this.tanks[t].availDepth+"M</p><p>Available Volume: "+this.tanks[t].availVolume+"L</p><p>Reserve Depth: "+this.tanks[t].reserveDepth+"M</p><p>Reserve Volume: "+this.tanks[t].reserveVolume+"L</p><p>Total Depth: "+this.tanks[t].totalDepth+"M</p><p>Total Volume: "+this.tanks[t].totalVolume+"L</p><p>Status Date: "+this.tanks[t].deviceStatusDate+"</p></div>",this.tanks[t].deviceLAT,this.tanks[t].deviceLONG,o+"Tank","assets/icon/watertankicon_marker.jpg")}},e=>{console.log("Network connection error retrieving tanks"),console.log(e),this.toastService.presentToast("Network connection error retrieving tanks")})}loadTroughMarkers(){console.log("Loading Trough Markers...."),this.xcisService.retrieveTroughs(this.postData).subscribe(e=>{for(var t in this.troughs=e.troughData,this.fences){console.log(this.troughs[t].deviceName),console.log(this.troughs[t].deviceMode),console.log(this.troughs[t].deviceLAT),console.log(this.troughs[t].deviceLONG);var o=this.troughs[t].deviceName;this.addMarker('<div id ="content"><p><b>'+o+"</b></p><p>Mode: "+this.troughs[t].deviceMode+"</p><p>Level: "+this.troughs[t].deviceLevel+"%</p><p>Available Depth: "+this.troughs[t].availDepth+"mm</p><p>Total Depth: "+this.troughs[t].totalDepth+"mm</p><p>Trough Status: "+this.troughs[t].troughStatus+"</p><p>Status Date: "+this.troughs[t].deviceStatusDate+"</p></div>",this.troughs[t].deviceLAT,this.troughs[t].deviceLONG,o+"Trough","assets/icon/troughicon_marker.png")}},e=>{console.log("Network connection error retrieving tanks"),console.log(e),this.toastService.presentToast("Network connection error retrieving troughs")})}loadFenceMarkers(){console.log("Loading Fence Markers...."),this.xcisService.retrieveFences(this.postData).subscribe(e=>{for(var t in this.fences=e.fenceData,this.fences){console.log(this.fences[t].deviceName),console.log(this.fences[t].deviceMode),console.log(this.fences[t].deviceLAT),console.log(this.fences[t].deviceLONG);var o=this.fences[t].deviceName;this.addMarker('<div id ="content"><p><b>'+o+"</b></p><p>Mode: "+this.fences[t].deviceMode+"</p><p>Voltage: "+this.fences[t].fenceVoltage+"KV</p><p>Status: "+this.fences[t].fenceStatus+"</p><p>Status Date: "+this.fences[t].deviceStatusDate+"</p></div>",this.fences[t].deviceLAT,this.fences[t].deviceLONG,o+"E-Fence","assets/icon/electricfenceicon_marker.png")}},e=>{console.log("Network connection error retrieving tanks"),console.log(e),this.toastService.presentToast("Network connection error retrieving tanks")})}}var d=o("SVse"),v=s.nb({encapsulation:0,styles:[["app-google-maps[_ngcontent-%COMP%]{display:block;width:100%;height:100%}"]],data:{}});function g(e){return s.Fb(0,[(e()(),s.pb(0,0,null,null,2,"ion-content",[],null,null,null,i.C,i.e)),s.ob(1,49152,null,0,a.r,[s.h,s.k,s.x],null,null),(e()(),s.pb(2,0,null,0,0,"div",[["id","map_canvas"],["style","height:100%; width:1000px; border:2px solid black;"]],null,null,null,null,null))],null,null)}var b=o("lGQG");class k{constructor(e,t,o,s,n,r,i){this.platform=e,this.router=t,this.authService=o,this.xcisService=s,this.toastService=n,this.http=r,this.navCtrl=i,this.postData={userID:"jsharp",req:"all"}}ngOnInit(){this.authService.userData$.subscribe(e=>{this.displayUserData=e})}testMarker(){let e=this.mapComponent.map.getCenter();this.mapComponent.addMarker(void 0,e.lat(),e.lng(),"test","http://maps.google.com/mapfiles/ms/icons/blue-dot.png")}}var m=o("iInd"),S=o("IheW"),w=s.nb({encapsulation:0,styles:[[""]],data:{}});function D(e){return s.Fb(0,[s.Cb(402653184,1,{mapComponent:0}),(e()(),s.pb(1,0,null,null,6,"ion-header",[],null,null,null,i.F,i.h)),s.ob(2,49152,null,0,a.y,[s.h,s.k,s.x],null,null),(e()(),s.pb(3,0,null,0,4,"ion-toolbar",[["color","primary"]],null,null,null,i.V,i.x)),s.ob(4,49152,null,0,a.wb,[s.h,s.k,s.x],{color:[0,"color"]},null),(e()(),s.pb(5,0,null,0,2,"ion-title",[],null,null,null,i.U,i.w)),s.ob(6,49152,null,0,a.ub,[s.h,s.k,s.x],null,null),(e()(),s.Eb(-1,0,[" Google Map "])),(e()(),s.pb(8,0,null,null,3,"ion-content",[],null,null,null,i.C,i.e)),s.ob(9,49152,null,0,a.r,[s.h,s.k,s.x],null,null),(e()(),s.pb(10,0,null,0,1,"app-google-maps",[["apiKey","AIzaSyBUoE0tE4u8zzxgsO3qkJ9cEeWIqjDgNbA"]],null,null,null,g,v)),s.ob(11,114688,[[1,4]],0,u,[c.a,h.a,s.B,s.k,d.c],{apiKey:[0,"apiKey"]},null),(e()(),s.pb(12,0,null,null,3,"ion-footer",[],null,null,null,i.D,i.f)),s.ob(13,49152,null,0,a.w,[s.h,s.k,s.x],null,null),(e()(),s.pb(14,0,null,0,1,"button",[["color","light"],["full",""],["ion-button",""]],null,[[null,"click"]],(function(e,t,o){var s=!0;return"click"===t&&(s=!1!==e.component.testMarker()&&s),s}),null,null)),(e()(),s.Eb(-1,null,["Test Marker"]))],(function(e,t){e(t,4,0,"primary"),e(t,11,0,"AIzaSyBUoE0tE4u8zzxgsO3qkJ9cEeWIqjDgNbA")}),null)}var M=s.lb("app-map",k,(function(e){return s.Fb(0,[(e()(),s.pb(0,0,null,null,1,"app-map",[],null,null,null,D,w)),s.ob(1,114688,null,0,k,[a.Cb,m.m,b.a,c.a,h.a,S.c,a.Bb],null,null)],(function(e,t){e(t,1,0)}),null)}),{},{},[]),f=o("s7LF");class y{}var L=o("j1ZV");o.d(t,"MapPageModuleNgFactory",(function(){return T}));var T=s.mb(n,[],(function(e){return s.xb([s.yb(512,s.j,s.X,[[8,[r.a,M]],[3,s.j],s.v]),s.yb(4608,d.k,d.j,[s.s,[2,d.r]]),s.yb(4608,f.j,f.j,[]),s.yb(4608,a.a,a.a,[s.x,s.g]),s.yb(4608,a.Ab,a.Ab,[a.a,s.j,s.p]),s.yb(4608,a.Db,a.Db,[a.a,s.j,s.p]),s.yb(1073742336,d.b,d.b,[]),s.yb(1073742336,f.i,f.i,[]),s.yb(1073742336,f.b,f.b,[]),s.yb(1073742336,a.yb,a.yb,[]),s.yb(1073742336,m.p,m.p,[[2,m.u],[2,m.m]]),s.yb(1073742336,y,y,[]),s.yb(1073742336,L.a,L.a,[]),s.yb(1073742336,n,n,[]),s.yb(1024,m.k,(function(){return[[{path:"",component:k}]]}),[])])}))}}]);